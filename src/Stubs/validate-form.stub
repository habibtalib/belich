<script>
    //Validate the form fields and show error messages
    function validateFields(form, button, url, request) {
        var ajaxResponse = window.responseAjaxRequest(request);
        //Ajax response
        fetch(url, ajaxResponse).then(response => {
                return response.json()
              }).then(data => {
                //Clear default errors
                window.validationClearDefaultErrors();
                //Errors from validation
                if(typeof data.errors === 'object') {
                    var validationErrors = Object.entries(data.errors);
                } else {
                    var validationErrors;
                }
                //Set the errors
                if(validationErrors) {
                    window.validationErrorMessage(form, button, validationErrors);
                //Submit form
                } else {
                    form.submit();
                }
            });
    }

    //Clear all the remained error messages
    function validationClearDefaultErrors() {
        //Get default error messages
        var defaultErrors = document.querySelectorAll('.validation-error');
        //Reset all the error messages
        if(defaultErrors) {
            defaultErrors.forEach( function(error) {
                error.innerHTML = '';
            });
        }
    }

    //Show all the error messages
    function validationErrorMessage(form, button, errors) {
        //Restore button title
        button.innerHTML = button.getAttribute('data-title');
        //Show errors if...
        errors.forEach( function(value) {
            var element = document.querySelector( '#error-' + value[0] );
            element.innerHTML = value[1];
            //Tabs alert
            window.tabAlert(element);
        });
    }

    //Show tab error when validate fails
    function tabAlert(item) {
        var container = document.getElementById('tab-link-' + item.dataset.tab);
        container.firstElementChild.classList.add('tab-error');
    }

    //The validation event
    document.addEventListener('DOMContentLoaded', function(event) {
        //Define container
        var belichForm = document.getElementById('form-:resource-:action');
        var belichButton = document.getElementById('button-form-:action');
        //Handle click event
        belichButton.addEventListener('click', function(event) {
            //Stop propagation
            event.preventDefault();
            //Start loading...
            window.loading(this, event);
            // Reset tabs if...
            var errors = document.querySelectorAll('.tab-error');
            for (var i = 0; i < errors.length; i++) {
                errors[i].classList.remove('tab-error');
            }
            //Set the request validation values
            var validationResquest = JSON.stringify({
                requestValues:{:values},
                requestRules::validationRules,
                requestAttributes::validationAttributes
            });
            //Get the url
            var validationUrl = ':validationRuoute';
            //Check for browser support
            if(browserSupportsFetch()) {
                validateFields(belichForm, belichButton, validationUrl, validationResquest)
            } else {
                loadScript('/vendor/belich/fetch.min.js', validateFields(belichForm, belichButton, validationUrl, validationResquest));
            }
        });
    });
</script>

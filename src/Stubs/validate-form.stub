<script>
    //Validate the form fields and show error messages
    function validateFields(button, url, request) {
        var ajaxResponse = window.responseAjaxRequest(request);
        //Ajax response
        fetch(url, ajaxResponse).then(response => {
                return response.json()
              }).then(data => {
                //Clear default errors
                validationClearDefaultErrors();
                //Errors from validation
                if(typeof data.errors === 'object') {
                    var validationErrors = Object.entries(data.errors);
                } else {
                    var validationErrors;
                }
                //Set the errors
                if(validationErrors) {
                    window.validationErrorMessage(button, validationErrors);
                //Submit form
                } else {
                    window.submitForm(button);
                }
            });
    }

    //Clear all the remained error messages
    function validationClearDefaultErrors() {
        //Get default error messages
        let defaultErrors = document.querySelectorAll('.validation-error');
        //Reset all the error messages
        if(defaultErrors) {
            defaultErrors.innerHTML = '';
        }
    }

    //Show all the error messages
    function validationErrorMessage(button, errors) {
        //Restore button title
        button.innerHTML = button.getAttribute('data-title');
        //Show errors if...
        errors.forEach( function(value) {
            document.querySelector( '#error-' + value[0] ).innerHTML = value[1];
        });
    }

    //The validation event
    document.addEventListener('DOMContentLoaded', function(event) {
        //Define button
        var button = document.querySelector( '#form-:resource-:action #button-form-:action' );
        //Handle click event
        button.addEventListener('click', function(event) {
            //Stop propagation
            event.preventDefault();
            //Start loading...
            window.loading(this, event);
            //Set the request validation values
            var validationResquest = JSON.stringify({
                requestValues:{:values},
                requestRules::validationRules,
                requestAttributes::validationAttributes
            });
            //Get the url
            var validationUrl = ':validationRuoute';
            //Check for browser support
            if(browserSupportsFetch()) {
                validateFields(button, validationUrl, validationResquest)
            } else {
                loadScript('/vendor/belich/fetch.min.js', validateFields(button, validationUrl, validationResquest));
            }
        });
    });
</script>
